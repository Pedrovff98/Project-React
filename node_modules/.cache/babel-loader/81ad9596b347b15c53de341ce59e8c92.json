{"ast":null,"code":"import _objectSpread from\"/home/pedro/projectReact/my-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/home/pedro/projectReact/my-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _asyncToGenerator from\"/home/pedro/projectReact/my-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"/home/pedro/projectReact/my-app/node_modules/@babel/runtime/regenerator/index.js\";export var loadPosts=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var postsResponse,photosResponse,_yield$Promise$all,_yield$Promise$all2,posts,photos,postsJson,photosJson,postsAndPhotos;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:postsResponse=fetch('https://jsonplaceholder.typicode.com/posts');photosResponse=fetch('https://jsonplaceholder.typicode.com/photos');_context.next=4;return Promise.all([postsResponse,photosResponse]);case 4:_yield$Promise$all=_context.sent;_yield$Promise$all2=_slicedToArray(_yield$Promise$all,2);posts=_yield$Promise$all2[0];photos=_yield$Promise$all2[1];_context.next=10;return posts.json();case 10:postsJson=_context.sent;_context.next=13;return photos.json();case 13:photosJson=_context.sent;postsAndPhotos=postsJson.map(function(post,index){return _objectSpread(_objectSpread({},post),{},{cover:photosJson[index].url});});return _context.abrupt(\"return\",postsAndPhotos);case 16:case\"end\":return _context.stop();}}},_callee);}));return function loadPosts(){return _ref.apply(this,arguments);};}();// responsável por fazer o POST da API","map":{"version":3,"sources":["/home/pedro/projectReact/my-app/src/Utils/load-post.js"],"names":["loadPosts","postsResponse","fetch","photosResponse","Promise","all","posts","photos","json","postsJson","photosJson","postsAndPhotos","map","post","index","cover","url"],"mappings":"sdAAA,MAAO,IAAMA,CAAAA,SAAS,0FAAG,4PAEXC,aAFW,CAEMC,KAAK,CAAC,4CAAD,CAFX,CAGXC,cAHW,CAGMD,KAAK,CAAC,6CAAD,CAHX,uBAKYE,CAAAA,OAAO,CAACC,GAAR,CAAY,CAACJ,aAAD,CAAeE,cAAf,CAAZ,CALZ,kGAKXG,KALW,wBAKLC,MALK,+CAOOD,CAAAA,KAAK,CAACE,IAAN,EAPP,SAOXC,SAPW,sCAQQF,CAAAA,MAAM,CAACC,IAAP,EARR,SAQXE,UARW,eAUXC,cAVW,CAUMF,SAAS,CAACG,GAAV,CAAc,SAACC,IAAD,CAAOC,KAAP,CAAgB,CACpD,sCAAWD,IAAX,MAAiBE,KAAK,CAAEL,UAAU,CAACI,KAAD,CAAV,CAAkBE,GAA1C,GACA,CAFsB,CAVN,iCAcVL,cAdU,yDAAH,kBAATX,CAAAA,SAAS,0CAAf,CAgBL","sourcesContent":["export const loadPosts = async () => {\n\n        const postsResponse =  fetch('https://jsonplaceholder.typicode.com/posts')\n        const photosResponse = fetch('https://jsonplaceholder.typicode.com/photos')\n     \n        const[posts,photos] =  await Promise.all([postsResponse,photosResponse]);\n     \n        const postsJson = await posts.json();\n        const photosJson = await photos.json();\n     \n        const postsAndPhotos = postsJson.map((post, index) =>{\n         return {...post, cover: photosJson[index].url}\n        });\n       \n        return postsAndPhotos;\n\n} // responsável por fazer o POST da API"]},"metadata":{},"sourceType":"module"}